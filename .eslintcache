[{"C:\\Users\\billg\\Documents\\Side Projects\\song-tracker\\src\\index.js":"1","C:\\Users\\billg\\Documents\\Side Projects\\song-tracker\\src\\reportWebVitals.js":"2","C:\\Users\\billg\\Documents\\Side Projects\\song-tracker\\src\\App.js":"3","C:\\Users\\billg\\Documents\\Side Projects\\song-tracker\\src\\Artist.js":"4","C:\\Users\\billg\\Documents\\Side Projects\\song-tracker\\src\\Search.js":"5"},{"size":625,"mtime":1608653848896,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":544,"mtime":1608857302521,"results":"9","hashOfConfig":"7"},{"size":2049,"mtime":1608785925259,"results":"10","hashOfConfig":"7"},{"size":2530,"mtime":1608857518607,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"qam0pl",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\billg\\Documents\\Side Projects\\song-tracker\\src\\index.js",[],["24","25"],"C:\\Users\\billg\\Documents\\Side Projects\\song-tracker\\src\\reportWebVitals.js",[],"C:\\Users\\billg\\Documents\\Side Projects\\song-tracker\\src\\App.js",[],"C:\\Users\\billg\\Documents\\Side Projects\\song-tracker\\src\\Artist.js",["26"],"import React, {useState} from \"react\";\r\n\r\nfunction Artist({artist, tracks}) {\r\n    //audio object for playing previews\r\n    const [audio, setAudio] = useState(null);\r\n    if(!artist) return null;\r\n    //destructure the artist object\r\n    const {images, name, followers, genres} = artist;\r\n\r\n    function playAudio(previewUrl) {\r\n        if(audio && audio.src === previewUrl)\r\n        {\r\n            if(audio.paused) audio.play(); else audio.pause();\r\n        }\r\n        else\r\n        {\r\n            if(audio && !audio.paused) audio.pause();\r\n            //note: this code avoids the issue of setState doing asynchronous updates to audio\r\n            const newAudio = new Audio(previewUrl);\r\n            setAudio(newAudio); newAudio.play();\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>{name}</h3>\r\n            <p>{followers.total.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} followers</p>\r\n            {\r\n                //<p>{genres.length > 0 ? \"Genres: \" + genres.join(\", \") : null}</p>\r\n            }\r\n            {\r\n                //check if images[0] isn't null before accessing it\r\n                images[0] ? (\r\n                    <img src={images[0].url} className=\"profile\" alt=\"\"/>\r\n                ) : (\r\n                    <p>This artist doesn't have a profile picture.</p>\r\n                )\r\n            }\r\n            <h4>Top Tracks</h4>\r\n            <div>\r\n            {\r\n                //map each track to a div containing the image\r\n                tracks.map(track => {\r\n                    const {id, name, album, preview_url} = track;\r\n                    return (\r\n                        <div key={id} onClick={() => playAudio(preview_url)} className=\"track\">\r\n                            <img src={album.images[0].url} className=\"trackImage\" alt=\"\"/>\r\n                            <p style={{marginTop: 0, marginBottom: 10}}>{name}</p>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Artist;","C:\\Users\\billg\\Documents\\Side Projects\\song-tracker\\src\\Search.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":8,"column":37,"nodeType":"33","messageId":"34","endLine":8,"endColumn":43},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'genres' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]